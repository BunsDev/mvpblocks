{
  "name": "conversation1",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "react"
  ],
  "registryDependencies": [
    "https://blocks.mvp-subha.me/r/button.json",
    "https://blocks.mvp-subha.me/r/input.json",
    "https://blocks.mvp-subha.me/r/utils.json"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Send, Mic, User, Bot } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { cn } from \"@/lib/utils\"\n\nconst initialMessages = [\n  {\n    id: \"1\",\n    content: \"Hi there! Welcome to our new platform. How can I assist you today?\",\n    sender: \"ai\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 10).toISOString(),\n  },\n  {\n    id: \"2\",\n    content: \"Hello! I'm looking for information about your premium subscription plans.\",\n    sender: \"user\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 9).toISOString(),\n  },\n  {\n    id: \"3\",\n    content:\n      \"Great question! Our premium plan offers unlimited access to all features, priority support, and advanced analytics. It's priced at $19.99/month with a 7-day free trial.\",\n    sender: \"ai\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 8).toISOString(),\n  },\n  {\n    id: \"4\",\n    content: \"That sounds interesting. Are there any discounts for annual subscriptions?\",\n    sender: \"user\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 7).toISOString(),\n  },\n  {\n    id: \"5\",\n    content:\n      \"We offer a 20% discount on annual subscriptions, bringing the price down to $191.90 per year, which saves you about $48 compared to the monthly plan.\",\n    sender: \"ai\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 6).toISOString(),\n  },\n]\n\ninterface ChatBubbleProps {\n  message: string\n  isUser: boolean\n  timestamp: Date\n}\n\nfunction ChatBubble({ message, isUser, timestamp }: ChatBubbleProps) {\n  const formattedTime = timestamp.toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    hour12: true,\n  })\n\n  return (\n    <div className={cn(\"flex w-full\", isUser ? \"justify-end\" : \"justify-start\")}>\n      <div className={cn(\"flex items-start max-w-[80%] space-x-2\", isUser && \"flex-row-reverse space-x-reverse\")}>\n        <div\n          className={cn(\n            \"flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center\",\n            isUser ? \"bg-primary/10\" : \"bg-muted\",\n          )}\n        >\n          {isUser ? <User className=\"h-4 w-4 text-primary\" /> : <Bot className=\"h-4 w-4 text-muted-foreground\" />}\n        </div>\n\n        <div className=\"flex flex-col\">\n          <div\n            className={cn(\n              \"rounded-2xl px-4 py-2 shadow-sm\",\n              isUser\n                ? \"bg-primary text-primary-foreground rounded-tr-none\"\n                : \"bg-card border border-border text-card-foreground rounded-tl-none\",\n            )}\n          >\n            <p className=\"whitespace-pre-wrap\">{message}</p>\n          </div>\n\n          <span className={cn(\"text-xs mt-1 text-muted-foreground\", isUser ? \"text-right\" : \"text-left\")}>{formattedTime}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default function Conversation1() {\n  const [messages, setMessages] = useState(initialMessages)\n  const [input, setInput] = useState(\"\")\n  const [isTyping, setIsTyping] = useState(false)\n\n  const handleSendMessage = (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!input.trim()) return\n    const userMessage = {\n      id: Date.now().toString(),\n      content: input,\n      sender: \"user\",\n      timestamp: new Date().toISOString(),\n    }\n\n    setMessages((prev) => [...prev, userMessage])\n    setInput(\"\")\n    setIsTyping(true)\n    setTimeout(() => {\n      const aiMessage = {\n        id: (Date.now() + 1).toString(),\n        content:\n          \"Thanks for your message! I'm here to help with any other questions you might have about our services or features.\",\n        sender: \"ai\",\n        timestamp: new Date().toISOString(),\n      }\n\n      setMessages((prev) => [...prev, aiMessage])\n      setIsTyping(false)\n    }, 1500)\n  }\n\n  return (\n    <main className=\"flex min-h-screen flex-col items-center justify-center p-4 bg-background\">\n      <div className=\"w-full max-w-2xl bg-card rounded-xl shadow-lg overflow-hidden border border-border\">\n        <div className=\"bg-primary p-4\">\n          <h1 className=\"text-primary-foreground font-semibold text-lg\">AI Assistant</h1>\n          <p className=\"text-primary-foreground/80 text-sm\">Always here to help you</p>\n        </div>\n\n        <div className=\"flex flex-col h-[600px]\">\n          <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n            {messages.map((message) => (\n              <ChatBubble\n                key={message.id}\n                message={message.content}\n                isUser={message.sender === \"user\"}\n                timestamp={new Date(message.timestamp)}\n              />\n            ))}\n\n            {isTyping && (\n              <div className=\"flex items-center space-x-2 text-muted-foreground text-sm\">\n                <div className=\"flex space-x-1\">\n                  <div\n                    className=\"w-2 h-2 bg-muted-foreground/70 rounded-full animate-bounce\"\n                    style={{ animationDelay: \"0ms\" }}\n                  ></div>\n                  <div\n                    className=\"w-2 h-2 bg-muted-foreground/70 rounded-full animate-bounce\"\n                    style={{ animationDelay: \"150ms\" }}\n                  ></div>\n                  <div\n                    className=\"w-2 h-2 bg-muted-foreground/70 rounded-full animate-bounce\"\n                    style={{ animationDelay: \"300ms\" }}\n                  ></div>\n                </div>\n                <span>AI is typing...</span>\n              </div>\n            )}\n          </div>\n\n          <div className=\"border-t border-border p-4\">\n            <form onSubmit={handleSendMessage} className=\"flex space-x-2\">\n              <Input\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type your message...\"\n                className=\"flex-1\"\n              />\n              <Button type=\"submit\" size=\"icon\" className=\"bg-primary hover:bg-primary/90\">\n                <Send className=\"h-4 w-4\" />\n              </Button>\n              <Button type=\"button\" size=\"icon\" variant=\"outline\">\n                <Mic className=\"h-4 w-4\" />\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </main>\n  )\n}\n",
      "path": "/components/mvpblocks/chatbot-ui/conversation1.tsx",
      "target": "/components/mvpblocks/conversation1.tsx"
    }
  ]
}