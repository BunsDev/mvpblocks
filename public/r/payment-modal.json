{
  "name": "payment-modal",
  "type": "registry:ui",
  "dependencies": [
    "react"
  ],
  "registryDependencies": [
    "https://blocks.mvp-subha.me/r/button.json",
    "https://blocks.mvp-subha.me/r/dialog.json",
    "https://blocks.mvp-subha.me/r/label.json",
    "https://blocks.mvp-subha.me/r/radio-group.json",
    "https://blocks.mvp-subha.me/r/utils.json"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport Image from \"next/image\"\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface PaymentMethod {\r\n  id: string\r\n  name: string\r\n  logo: string\r\n  description: string\r\n}\r\n\r\nconst paymentMethods: PaymentMethod[] = [\r\n  {\r\n    id: \"paypal\",\r\n    name: \"PayPal\",\r\n    logo: \"/placeholder.svg?height=40&width=120\",\r\n    description: \"Pay with your PayPal account\",\r\n  },\r\n  {\r\n    id: \"stripe\",\r\n    name: \"Stripe\",\r\n    logo: \"/placeholder.svg?height=40&width=120\",\r\n    description: \"Pay with credit card\",\r\n  },\r\n  {\r\n    id: \"mollie\",\r\n    name: \"Mollie\",\r\n    logo: \"/placeholder.svg?height=40&width=120\",\r\n    description: \"Pay with European payment methods\",\r\n  },\r\n]\r\n\r\ninterface PaymentModalProps {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  plan: {\r\n    name: string\r\n    price: number\r\n    period: string\r\n  }\r\n}\r\n\r\nexport function PaymentModal({ isOpen, onClose, plan }: PaymentModalProps) {\r\n  const [selectedMethod, setSelectedMethod] = useState<string>(\"stripe\")\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const handleSubmit = async () => {\r\n    setIsLoading(true)\r\n    // Simulated payment processing\r\n    await new Promise((resolve) => setTimeout(resolve, 1500))\r\n    setIsLoading(false)\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-[500px] bg-zinc-900 border-zinc-800 text-white p-0\">\r\n        <DialogHeader className=\"p-6 border-b border-zinc-800\">\r\n          <DialogTitle className=\"text-xl font-medium\">Choose payment method</DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"p-6 space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-baseline justify-between\">\r\n              <h3 className=\"text-sm font-medium text-zinc-400\">Selected plan</h3>\r\n              <div className=\"text-right\">\r\n                <div className=\"text-sm font-medium\">{plan.name}</div>\r\n                <div className=\"text-2xl font-bold\">\r\n                  â‚¬{plan.price}\r\n                  <span className=\"text-sm text-zinc-400\">/{plan.period}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <RadioGroup value={selectedMethod} onValueChange={setSelectedMethod} className=\"grid gap-4\">\r\n              {paymentMethods.map((method) => (\r\n                <Label\r\n                  key={method.id}\r\n                  className={cn(\r\n                    \"flex items-center justify-between px-4 py-3 border rounded-lg cursor-pointer transition-colors\",\r\n                    selectedMethod === method.id\r\n                      ? \"border-blue-600 bg-blue-600/10\"\r\n                      : \"border-zinc-800 hover:border-zinc-700\",\r\n                  )}\r\n                >\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <RadioGroupItem value={method.id} className=\"border-zinc-700\" />\r\n                    <div className=\"space-y-1\">\r\n                      <div className=\"font-medium\">{method.name}</div>\r\n                      <div className=\"text-sm text-zinc-400\">{method.description}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-8 w-20 relative\">\r\n                    <Image src={method.logo || \"/placeholder.svg\"} alt={method.name} fill className=\"object-contain\" />\r\n                  </div>\r\n                </Label>\r\n              ))}\r\n            </RadioGroup>\r\n          </div>\r\n          <Button className=\"w-full bg-blue-600 hover:bg-blue-700\" onClick={handleSubmit} disabled={isLoading}>\r\n            {isLoading ? \"Processing...\" : \"Continue to payment\"}\r\n          </Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n",
      "path": "/components/ui/payment-modal.tsx",
      "target": "/components/ui/payment-modal.tsx"
    }
  ]
}