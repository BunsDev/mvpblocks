{
  "name": "dashboard-header",
  "type": "registry:block",
  "dependencies": [
    "framer-motion",
    "lucide-react",
    "react"
  ],
  "registryDependencies": [
    "https://blocks.mvp-subha.me/r/button.json",
    "https://blocks.mvp-subha.me/r/utils.json",
    "https://blocks.mvp-subha.me/r/input.json",
    "https://blocks.mvp-subha.me/r/sidebar.json",
    "https://blocks.mvp-subha.me/r/separator.json",
    "https://blocks.mvp-subha.me/r/sheet.json",
    "https://blocks.mvp-subha.me/r/skeleton.json",
    "https://blocks.mvp-subha.me/r/tooltip.json",
    "https://blocks.mvp-subha.me/r/use-mobile.json",
    "https://blocks.mvp-subha.me/r/dropdown-menu.json",
    "https://blocks.mvp-subha.me/r/breadcrumb.json"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\";\r\n\r\nimport { memo } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { SidebarTrigger } from \"@/components/ui/sidebar\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  BreadcrumbList,\r\n  BreadcrumbPage,\r\n  BreadcrumbSeparator,\r\n} from \"@/components/ui/breadcrumb\";\r\nimport {\r\n  Bell,\r\n  Search,\r\n  Filter,\r\n  Download,\r\n  RefreshCw,\r\n  MoreHorizontal,\r\n} from \"lucide-react\";\r\n\r\ninterface DashboardHeaderProps {\r\n  searchQuery: string;\r\n  onSearchChange: (value: string) => void;\r\n  onRefresh: () => void;\r\n  onExport: () => void;\r\n  isRefreshing: boolean;\r\n}\r\n\r\nexport const DashboardHeader = memo(\r\n  ({\r\n    searchQuery,\r\n    onSearchChange,\r\n    onRefresh,\r\n    onExport,\r\n    isRefreshing,\r\n  }: DashboardHeaderProps) => {\r\n    return (\r\n      <header className=\"sticky top-0 z-50 flex h-16 w-full shrink-0 items-center gap-2 border-b bg-background/95 backdrop-blur transition-[width,height] ease-linear group-has-[[data-collapsible=icon]]/sidebar-wrapper:h-12\">\r\n        <div className=\"flex items-center gap-2 px-4\">\r\n          <SidebarTrigger className=\"-ml-1\" />\r\n          <Separator orientation=\"vertical\" className=\"mr-2 h-4\" />\r\n          <Breadcrumb>\r\n            <BreadcrumbList>\r\n              <BreadcrumbItem className=\"hidden md:block\">\r\n                <BreadcrumbLink href=\"#\">Home</BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n            </BreadcrumbList>\r\n          </Breadcrumb>\r\n        </div>\r\n\r\n        <div className=\"ml-auto flex items-center gap-2 px-4\">\r\n          <motion.div\r\n            initial={{ opacity: 0, x: 20 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            {/* Search Input - Hide on Mobile */}\r\n            <div className=\"relative hidden md:block\">\r\n              <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 transform text-muted-foreground\" />\r\n              <Input\r\n                placeholder=\"Search...\"\r\n                value={searchQuery}\r\n                onChange={(e) => onSearchChange(e.target.value)}\r\n                className=\"w-64 pl-10\"\r\n              />\r\n            </div>\r\n\r\n            {/* Desktop Actions */}\r\n            <div className=\"hidden items-center gap-2 md:flex\">\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <Filter className=\"mr-2 h-4 w-4\" />\r\n                Filter\r\n              </Button>\r\n\r\n              <Button variant=\"outline\" size=\"sm\" onClick={onExport}>\r\n                <Download className=\"mr-2 h-4 w-4\" />\r\n                Export\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={onRefresh}\r\n                disabled={isRefreshing}\r\n              >\r\n                <RefreshCw\r\n                  className={`mr-2 h-4 w-4 ${isRefreshing ? \"animate-spin\" : \"\"}`}\r\n                />\r\n                Refresh\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Mobile Menu */}\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild className=\"md:hidden\">\r\n                <Button variant=\"outline\" size=\"icon\">\r\n                  <MoreHorizontal className=\"h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent align=\"end\" className=\"w-48\">\r\n                <DropdownMenuItem onClick={() => onSearchChange(\"\")}>\r\n                  <Search className=\"mr-2 h-4 w-4\" />\r\n                  Search\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem>\r\n                  <Filter className=\"mr-2 h-4 w-4\" />\r\n                  Filter\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem onClick={onExport}>\r\n                  <Download className=\"mr-2 h-4 w-4\" />\r\n                  Export\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem onClick={onRefresh}>\r\n                  <RefreshCw className=\"mr-2 h-4 w-4\" />\r\n                  Refresh\r\n                </DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n\r\n            <Button variant=\"outline\" size=\"sm\">\r\n              <Bell className=\"h-4 w-4\" />\r\n            </Button>\r\n          </motion.div>\r\n        </div>\r\n      </header>\r\n    );\r\n  },\r\n);\r\n\r\nDashboardHeader.displayName = \"DashboardHeader\";\r\n",
      "path": "/components/mvpblocks/dashboards/admin-dashboard-1/ui/dashboard-header.tsx",
      "target": "/components/mvpblocks/dashboard-header.tsx"
    }
  ]
}