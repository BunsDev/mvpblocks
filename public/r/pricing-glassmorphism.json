{
  "name": "pricing-glassmorphism",
  "description": "A glassmorphism styled pricing section with 3 pricing tiers. Used for SaaS products, pricing sections, etc.",
  "categories": [
    "pricing",
    "mainsection"
  ],
  "author": "surya10102000",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "registryDependencies": [
    "https://blocks.mvp-subha.me/r/utils.json",
    "https://blocks.mvp-subha.me/r/button.json",
    "https://blocks.mvp-subha.me/r/switch.json",
    "https://blocks.mvp-subha.me/r/label.json"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "import * as React from 'react';\nimport { motion, Variants } from 'framer-motion';\nimport { cn } from '@/lib/utils';\nimport { Check } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\n\ntype PricingPlan = {\n  name: string;\n  price: {\n    monthly: string;\n    annual: string;\n  };\n  description: string;\n  features: string[];\n  cta: string;\n  tag: string;\n  link: string;\n  highlight?: boolean;\n};\n\nconst pricingPlans: PricingPlan[] = [\n  {\n    name: 'Starter',\n    price: {\n      monthly: 'Free',\n      annual: 'Free',\n    },\n    description: 'Perfect for individuals getting started',\n    features: [\n      'Up to 5 projects',\n      '10GB storage',\n      'Basic analytics',\n      'Email support',\n    ],\n    cta: 'Get Started',\n    link: '#',\n    tag: 'Free Plan',\n  },\n  {\n    name: 'Professional',\n    price: {\n      monthly: '$49',\n      annual: '$39',\n    },\n    description: 'For growing teams and businesses',\n    features: [\n      'Unlimited projects',\n      '50GB storage',\n      'Advanced analytics',\n      'Priority email support',\n      'API access',\n    ],\n    cta: 'Start Free Trial',\n    link: '#',\n    tag: 'Standard Plan',\n  },\n  {\n    name: 'Enterprise',\n    price: {\n      monthly: '$99',\n      annual: '$79',\n    },\n    description: 'For large scale organizations',\n    features: [\n      'Unlimited projects',\n      'Unlimited storage',\n      'Advanced analytics',\n      '24/7 phone support',\n      'API access',\n      'Dedicated account manager',\n    ],\n    cta: 'Contact Sales',\n    link: '#',\n    tag: 'Premium Plan',\n    highlight: true,\n  },\n];\n\nconst containerVariants: Variants = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1,\n    },\n  },\n};\n\nconst itemVariants: Variants = {\n  hidden: { opacity: 0, y: 20 },\n  show: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      type: 'spring',\n      damping: 15,\n      stiffness: 150,\n    },\n  },\n};\n\ninterface PricingProps {\n  plans?: typeof pricingPlans;\n  className?: string;\n}\n\nconst PricingPage = ({ plans = pricingPlans, className }: PricingProps) => {\n  const [isAnnual, setIsAnnual] = React.useState(true);\n\n  return (\n    <div className={cn('relative w-full overflow-hidden', className)}>\n      {/* Background elements */}\n      <div className=\"absolute inset-0 -z-10 overflow-hidden\">\n        <div className=\"bg-primary/5 absolute -right-[10%] -bottom-[10%] h-[40%] w-[40%] rounded-full blur-3xl\" />\n        <div className=\"bg-primary/5 absolute -bottom-[10%] -left-[10%] h-[40%] w-[40%] rounded-full blur-3xl\" />\n        <h1 className=\"text-center text-[7rem] font-bold md:text-[10rem]\">\n          Pricing\n        </h1>\n      </div>\n      {/* Pricing Container */}\n      <div className=\"relative container pt-28 md:pt-40\">\n        <motion.div\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate=\"show\"\n          className=\"relative z-10 grid gap-8 md:grid-cols-2 lg:grid-cols-3\"\n        >\n          {plans.map((plan) => (\n            <PricingCard\n              key={plan.name}\n              variants={itemVariants}\n              plan={plan}\n              isAnnual={isAnnual}\n            />\n          ))}\n        </motion.div>\n      </div>\n\n      <BillingToggle\n        isAnnual={isAnnual}\n        onCheckedChange={setIsAnnual}\n        className=\"mb-12\"\n      />\n    </div>\n  );\n};\n\ninterface PriceDisplayProps {\n  price: {\n    monthly: string;\n    annual: string;\n  };\n  isAnnual: boolean;\n  className?: string;\n}\n\nconst PriceDisplay = ({ price, isAnnual, className }: PriceDisplayProps) => {\n  return (\n    <div className={cn('relative mb-8', className)}>\n      <div\n        className={cn(\n          'mt-2 text-6xl font-bold',\n          'from-foreground bg-gradient-to-r to-transparent bg-clip-text text-transparent',\n        )}\n      >\n        {price.monthly === 'Free' ? (\n          <span>Free</span>\n        ) : (\n          <>\n            <span>{isAnnual ? price.annual : price.monthly}</span>\n            <span>/{isAnnual ? 'y' : 'm'}</span>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\ninterface PricingFeaturesProps {\n  features: string[];\n  className?: string;\n}\n\nconst PricingFeatures = ({ features, className }: PricingFeaturesProps) => {\n  return (\n    <ul className={cn('relative mb-8 space-y-3', className)}>\n      {features.map((feature) => (\n        <li key={feature} className=\"flex items-center\">\n          <div className=\"bg-foreground/10 shadow-foreground/50 mr-3 rounded-full p-1 shadow-inner\">\n            <Check className=\"h-4 w-4\" />\n          </div>\n          <span>{feature}</span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\ninterface PricingCardProps\n  extends React.ComponentPropsWithoutRef<typeof motion.div> {\n  plan: PricingPlan;\n  isAnnual: boolean;\n}\n\nconst PricingCard = React.forwardRef<HTMLDivElement, PricingCardProps>(\n  ({ plan, isAnnual, className, ...props }, ref) => {\n    return (\n      <motion.div\n        ref={ref}\n        className={cn(\n          'relative flex flex-col justify-between overflow-hidden rounded-2xl p-6',\n          'border-border/50 border',\n          'bg-background/20 backdrop-blur-sm',\n          'shadow-[inset_0_1px_30px_0_rgba(255,255,255,0.1)]',\n          \"before:absolute before:inset-0 before:-z-10 before:content-['']\",\n          'before:bg-gradient-to-br before:from-white/7 before:to-transparent',\n          'before:opacity-0 before:transition-opacity before:duration-300 hover:before:opacity-100',\n          \"after:absolute after:inset-0 after:-z-20 after:content-['']\",\n          'after:bg-[radial-gradient(circle_at_75%_25%,hsl(var(--primary)/0.05),transparent_70%)]',\n          'after:opacity-70',\n          'hover:border-border/70 hover:shadow-lg',\n          className,\n        )}\n        whileHover={{ y: -8 }}\n        {...props}\n      >\n        <div>\n          <div className=\"py-2\">\n            <div className=\"text-muted-foreground text-sm font-medium\">\n              {plan.tag}\n            </div>\n          </div>\n\n          <PriceDisplay price={plan.price} isAnnual={isAnnual} />\n          <PricingFeatures features={plan.features} />\n        </div>\n\n        <div className=\"relative\">\n          <Button\n            className={cn(\n              'after:bg-primary/80 relative w-full after:absolute after:-z-10 after:h-full after:w-full after:blur-xs',\n            )}\n          >\n            {plan.cta}\n          </Button>\n        </div>\n      </motion.div>\n    );\n  },\n);\n\nPricingCard.displayName = 'PricingCard';\n\ninterface BillingToggleProps {\n  isAnnual: boolean;\n  onCheckedChange: (checked: boolean) => void;\n  className?: string;\n}\n\nconst BillingToggle = ({\n  isAnnual,\n  onCheckedChange,\n  className,\n}: BillingToggleProps) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: -20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.6 }}\n      className={cn(\n        'flex flex-col items-center justify-center text-center',\n        className,\n      )}\n    >\n      <div className=\"bg-background/50 border-border/50 mt-8 flex items-center gap-4 rounded-full border p-2 backdrop-blur-sm\">\n        <Label htmlFor=\"billing-toggle\">Monthly</Label>\n        <Switch\n          id=\"billing-toggle\"\n          checked={isAnnual}\n          onCheckedChange={onCheckedChange}\n        />\n        <Label htmlFor=\"billing-toggle\">\n          Annual <span className=\"text-primary\">(20% off)</span>\n        </Label>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default PricingPage;\n\nexport type { PricingPlan };\n\nexport { pricingPlans };\n\nexport { PriceDisplay, PricingFeatures, PricingCard, BillingToggle };\n",
      "path": "/components/mvpblocks/mainsections/pricing/pricing-glassmorphism.tsx",
      "target": "components/mvpblocks/pricing-glassmorphism.tsx"
    }
  ]
}