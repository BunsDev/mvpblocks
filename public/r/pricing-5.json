{
  "name": "pricing-5",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "react",
    "@number-flow/react"
  ],
  "registryDependencies": [
    "https://blocks.mvp-subha.me/r/utils.json",
    "https://blocks.mvp-subha.me/r/badge.json",
    "https://blocks.mvp-subha.me/r/button.json"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport NumberFlow from \"@number-flow/react\";\r\nimport { BadgeCheck } from \"lucide-react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst PAYMENT_FREQUENCIES: (\"monthly\" | \"yearly\")[] = [\"monthly\", \"yearly\"];\r\nconst TIERS = [\r\n  {\r\n    id: \"individuals\",\r\n    name: \"Individuals\",\r\n    price: {\r\n      monthly: \"Free\",\r\n      yearly: \"Free\",\r\n    },\r\n    description: \"For your hobby projects\",\r\n    features: [\r\n      \"Free email alerts\",\r\n      \"3-minute checks\",\r\n      \"Automatic data enrichment\",\r\n      \"10 monitors\",\r\n      \"Up to 3 seats\",\r\n    ],\r\n    cta: \"Get started\",\r\n  },\r\n  {\r\n    id: \"teams\",\r\n    name: \"Teams\",\r\n    price: {\r\n      monthly: 90,\r\n      yearly: 75,\r\n    },\r\n    description: \"Great for small businesses\",\r\n    features: [\r\n      \"Unlimited phone calls\",\r\n      \"30 second checks\",\r\n      \"Single-user account\",\r\n      \"20 monitors\",\r\n      \"Up to 6 seats\",\r\n    ],\r\n    cta: \"Get started\",\r\n    popular: true,\r\n  },\r\n  {\r\n    id: \"organizations\",\r\n    name: \"Organizations\",\r\n    price: {\r\n      monthly: 120,\r\n      yearly: 100,\r\n    },\r\n    description: \"Great for large businesses\",\r\n    features: [\r\n      \"Unlimited phone calls\",\r\n      \"15 second checks\",\r\n      \"Single-user account\",\r\n      \"50 monitors\",\r\n      \"Up to 10 seats\",\r\n    ],\r\n    cta: \"Get started\",\r\n  },\r\n  {\r\n    id: \"enterprise\",\r\n    name: \"Enterprise\",\r\n    price: {\r\n      monthly: \"Custom\",\r\n      yearly: \"Custom\",\r\n    },\r\n    description: \"For multiple teams\",\r\n    features: [\r\n      \"Everything in Organizations\",\r\n      \"Up to 5 team members\",\r\n      \"100 monitors\",\r\n      \"15 status pages\",\r\n      \"200+ integrations\",\r\n    ],\r\n    cta: \"Contact Us\",\r\n    highlighted: true,\r\n  },\r\n];\r\n\r\nconst HighlightedBackground = () => (\r\n  <div className=\"absolute inset-0 bg-[linear-gradient(to_right,#4f4f4f2e_1px,transparent_1px),linear-gradient(to_bottom,#4f4f4f2e_1px,transparent_1px)] bg-[size:45px_45px] opacity-100 [mask-image:radial-gradient(ellipse_80%_50%_at_50%_0%,#000_70%,transparent_110%)] dark:opacity-30\" />\r\n);\r\n\r\nconst PopularBackground = () => (\r\n  <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(240,119,119,0.1),rgba(255,255,255,0))] dark:bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(220,119,118,0.3),rgba(255,255,255,0))]\" />\r\n);\r\n\r\nconst Tab = ({\r\n  text,\r\n  selected,\r\n  setSelected,\r\n  discount = false,\r\n}: {\r\n  text: string;\r\n  selected: boolean;\r\n  setSelected: (text: string) => void;\r\n  discount?: boolean;\r\n}) => {\r\n  return (\r\n    <button\r\n      onClick={() => setSelected(text)}\r\n      className={cn(\r\n        \"relative w-fit px-4 py-2 text-sm font-semibold capitalize text-foreground transition-colors\",\r\n        discount && \"flex items-center justify-center gap-2.5\",\r\n      )}\r\n    >\r\n      <span className=\"relative z-10\">{text}</span>\r\n      {selected && (\r\n        <motion.span\r\n          layoutId=\"tab\"\r\n          transition={{ type: \"spring\", duration: 0.4 }}\r\n          className=\"absolute inset-0 z-0 rounded-full bg-background shadow-sm\"\r\n        ></motion.span>\r\n      )}\r\n      {discount && (\r\n        <Badge\r\n          className={cn(\r\n            \"relative z-10 whitespace-nowrap bg-gray-100 text-xs text-black shadow-none hover:bg-gray-100\",\r\n            selected\r\n              ? \"bg-[#F3F4F6] hover:bg-[#F3F4F6]\"\r\n              : \"bg-gray-300 hover:bg-gray-300\",\r\n          )}\r\n        >\r\n          Save 35%\r\n        </Badge>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst PricingCard = ({\r\n  tier,\r\n  paymentFrequency,\r\n}: {\r\n  tier: (typeof TIERS)[0];\r\n  paymentFrequency: keyof typeof tier.price;\r\n}) => {\r\n  const price = tier.price[paymentFrequency];\r\n  const isHighlighted = tier.highlighted;\r\n  const isPopular = tier.popular;\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"relative flex flex-col gap-8 overflow-hidden rounded-2xl border p-6 shadow\",\r\n        isHighlighted\r\n          ? \"bg-foreground text-background\"\r\n          : \"bg-background text-foreground\",\r\n        isPopular && \"outline outline-[#eb638a]\",\r\n      )}\r\n    >\r\n      {isHighlighted && <HighlightedBackground />}\r\n      {isPopular && <PopularBackground />}\r\n\r\n      <h2 className=\"flex items-center gap-3 text-xl font-medium capitalize\">\r\n        {tier.name}\r\n        {isPopular && (\r\n          <Badge className=\"mt-1 bg-orange-900 px-1 py-0 text-white hover:bg-orange-900\">\r\n            ðŸ”¥ Most Popular\r\n          </Badge>\r\n        )}\r\n      </h2>\r\n\r\n      <div className=\"relative h-12\">\r\n        {typeof price === \"number\" ? (\r\n          <>\r\n            <NumberFlow\r\n              format={{\r\n                style: \"currency\",\r\n                currency: \"USD\",\r\n                trailingZeroDisplay: \"stripIfInteger\",\r\n              }}\r\n              value={price}\r\n              className=\"text-4xl font-medium\"\r\n            />\r\n            <p className=\"-mt-2 text-xs font-medium\">Per month/user</p>\r\n          </>\r\n        ) : (\r\n          <h1 className=\"text-4xl font-medium\">{price}</h1>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex-1 space-y-2\">\r\n        <h3 className=\"text-sm font-medium\">{tier.description}</h3>\r\n        <ul className=\"space-y-2\">\r\n          {tier.features.map((feature, index) => (\r\n            <li\r\n              key={index}\r\n              className={cn(\r\n                \"flex items-center gap-2 text-sm font-medium\",\r\n                isHighlighted ? \"text-background\" : \"text-foreground/60\",\r\n              )}\r\n            >\r\n              <BadgeCheck strokeWidth={1} size={16} />\r\n              {feature}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <Button\r\n        className={cn(\r\n          \"h-fit w-full rounded-lg\",\r\n          isHighlighted && \"bg-accent text-foreground hover:bg-accent/95\",\r\n        )}\r\n      >\r\n        {tier.cta}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function PricingSection(){\r\n  const [selectedPaymentFreq, setSelectedPaymentFreq] = useState<\"monthly\" | \"yearly\">(\r\n    PAYMENT_FREQUENCIES[0],\r\n  );\r\n\r\n  return (\r\n    <section className=\"flex flex-col items-center gap-10 py-10\">\r\n      <div className=\"space-y-7 text-center\">\r\n        <div className=\"space-y-4\">\r\n          <h1 className=\"text-4xl font-medium md:text-5xl\">Plans and Pricing</h1>\r\n          <p>Receive unlimited credits when you pay yearly, and save on your plan.</p>\r\n        </div>\r\n        <div className=\"mx-auto flex w-fit rounded-full bg-[#F3F4F6] p-1 dark:bg-[#222]\">\r\n          {PAYMENT_FREQUENCIES.map((freq) => (\r\n            <Tab\r\n              key={freq}\r\n              text={freq}\r\n              selected={selectedPaymentFreq === freq}\r\n              setSelected={(text) => setSelectedPaymentFreq(text as \"monthly\" | \"yearly\")}\r\n              discount={freq === \"yearly\"}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid w-full max-w-6xl gap-6 sm:grid-cols-2 grid-cols-1 md:grid-cols-3 xl:grid-cols-4\">\r\n        {TIERS.map((tier, i) => (\r\n          <PricingCard\r\n            key={i}\r\n            tier={tier}\r\n            paymentFrequency={selectedPaymentFreq}\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};",
      "path": "/components/mvpblocks/mainsections/pricing/pricing-5.tsx",
      "target": "components/mvpblocks/pricing-5.tsx"
    }
  ]
}