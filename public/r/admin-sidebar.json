{
  "name": "admin-sidebar",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "next-themes",
    "react"
  ],
  "registryDependencies": [
    "https://blocks.mvp-subha.me/r/sidebar.json",
    "https://blocks.mvp-subha.me/r/utils.json",
    "https://blocks.mvp-subha.me/r/button.json",
    "https://blocks.mvp-subha.me/r/input.json",
    "https://blocks.mvp-subha.me/r/separator.json",
    "https://blocks.mvp-subha.me/r/sheet.json",
    "https://blocks.mvp-subha.me/r/skeleton.json",
    "https://blocks.mvp-subha.me/r/tooltip.json",
    "https://blocks.mvp-subha.me/r/use-mobile.json"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "'use client';\r\n\r\nimport { memo } from 'react';\r\nimport { useTheme } from 'next-themes';\r\nimport Link from 'next/link';\r\nimport {\r\n  Sidebar,\r\n  SidebarContent,\r\n  SidebarFooter,\r\n  SidebarGroup,\r\n  SidebarGroupContent,\r\n  SidebarGroupLabel,\r\n  SidebarHeader,\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  SidebarRail,\r\n} from '@/components/ui/sidebar';\r\nimport {\r\n  LayoutDashboard,\r\n  Users,\r\n  BarChart3,\r\n  FileText,\r\n  Activity,\r\n  Database,\r\n  Shield,\r\n  Zap,\r\n  Bell,\r\n  Settings,\r\n  Moon,\r\n  Sun,\r\n  User,\r\n} from 'lucide-react';\r\n\r\nconst menuItems = [\r\n  { title: 'Dashboard', icon: LayoutDashboard, href: '#dashboard' },\r\n  { title: 'Analytics', icon: BarChart3, href: '#analytics' },\r\n  { title: 'Users', icon: Users, href: '#users' },\r\n  { title: 'Content', icon: FileText, href: '#content' },\r\n  { title: 'Activity', icon: Activity, href: '#activity' },\r\n  { title: 'Database', icon: Database, href: '#database' },\r\n  { title: 'Security', icon: Shield, href: '#security' },\r\n  { title: 'Performance', icon: Zap, href: '#performance' },\r\n  { title: 'Notifications', icon: Bell, href: '#notifications' },\r\n  { title: 'Settings', icon: Settings, href: '#settings' },\r\n];\r\n\r\nexport const AdminSidebar = memo(() => {\r\n  const { theme, setTheme } = useTheme();\r\n\r\n  return (\r\n    <Sidebar collapsible=\"icon\">\r\n      <SidebarHeader>\r\n        <SidebarMenu>\r\n          <SidebarMenuItem>\r\n            <SidebarMenuButton size=\"lg\" asChild>\r\n              <Link href=\"#dashboard\">\r\n                <div className=\"flex aspect-square size-8 items-center justify-center rounded-lg bg-primary text-primary-foreground\">\r\n                  <LayoutDashboard className=\"h-5 w-5\" />\r\n                </div>\r\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\r\n                  <span className=\"truncate font-semibold\">TechCorp</span>\r\n                  <span className=\"truncate text-xs\">Admin Panel</span>\r\n                </div>\r\n              </Link>\r\n            </SidebarMenuButton>\r\n          </SidebarMenuItem>\r\n        </SidebarMenu>\r\n      </SidebarHeader>\r\n\r\n      <SidebarContent>\r\n        <SidebarGroup>\r\n          <SidebarGroupLabel>Navigation</SidebarGroupLabel>\r\n          <SidebarGroupContent>\r\n            <SidebarMenu>\r\n              {menuItems.map((item) => {\r\n                const Icon = item.icon;\r\n                return (\r\n                  <SidebarMenuItem key={item.href}>\r\n                    <SidebarMenuButton asChild>\r\n                      <Link href={item.href}>\r\n                        <Icon />\r\n                        <span>{item.title}</span>\r\n                      </Link>\r\n                    </SidebarMenuButton>\r\n                  </SidebarMenuItem>\r\n                );\r\n              })}\r\n            </SidebarMenu>\r\n          </SidebarGroupContent>\r\n        </SidebarGroup>\r\n      </SidebarContent>\r\n\r\n      <SidebarFooter>\r\n        <SidebarMenu>\r\n          <SidebarMenuItem>\r\n            <SidebarMenuButton\r\n              onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\r\n            >\r\n              {theme === 'dark' ? <Sun /> : <Moon />}\r\n              <span>{theme === 'dark' ? 'Light Mode' : 'Dark Mode'}</span>\r\n            </SidebarMenuButton>\r\n          </SidebarMenuItem>\r\n          <SidebarMenuItem>\r\n            <SidebarMenuButton asChild>\r\n              <Link href=\"#profile\">\r\n                <User />\r\n                <span>Admin Profile</span>\r\n              </Link>\r\n            </SidebarMenuButton>\r\n          </SidebarMenuItem>\r\n        </SidebarMenu>\r\n      </SidebarFooter>\r\n      <SidebarRail />\r\n    </Sidebar>\r\n  );\r\n});\r\n\r\nAdminSidebar.displayName = 'AdminSidebar';\r\n",
      "path": "/components/mvpblocks/dashboards/admin-dashboard-1/ui/admin-sidebar.tsx",
      "target": "/components/mvpblocks/admin-sidebar.tsx"
    }
  ]
}