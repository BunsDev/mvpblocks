{
  "name": "contact-us-1",
  "type": "registry:block",
  "dependencies": [
    "framer-motion",
    "lucide-react",
    "react"
  ],
  "registryDependencies": [
    "https://blocks.mvp-subha.me/r/button.json",
    "https://blocks.mvp-subha.me/r/globe.json",
    "https://blocks.mvp-subha.me/r/input.json",
    "https://blocks.mvp-subha.me/r/label.json",
    "https://blocks.mvp-subha.me/r/sparkles.json",
    "https://blocks.mvp-subha.me/r/textarea.json"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "'use client';\r\n\r\nimport { useState, useRef } from 'react';\r\nimport { motion, useInView } from 'framer-motion';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Button } from '@/components/ui/button';\r\nimport Earth from '@/components/ui/globe';\r\nimport { SparklesCore } from '@/components/ui/sparkles';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Check, Loader2 } from 'lucide-react';\r\n\r\nexport default function ContactUs1() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const formRef = useRef(null);\r\n  const isInView = useInView(formRef, { once: true, amount: 0.3 });\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      // Perform form submission logic here\r\n      console.log('Form submitted:', { name, email, message });\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      setName('');\r\n      setEmail('');\r\n      setMessage('');\r\n      setIsSubmitted(true);\r\n      setTimeout(() => {\r\n        setIsSubmitted(false);\r\n      }, 5000);\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"relative w-full overflow-hidden bg-background py-16 md:py-24\">\r\n      <div\r\n        className=\"absolute left-0 top-0 h-[500px] w-[500px] rounded-full opacity-20 blur-[120px]\"\r\n        style={{\r\n          background: `radial-gradient(circle at center, #e60a64, transparent 70%)`,\r\n        }}\r\n      />\r\n      <div\r\n        className=\"absolute bottom-0 right-0 h-[300px] w-[300px] rounded-full opacity-10 blur-[100px]\"\r\n        style={{\r\n          background: `radial-gradient(circle at center, #e60a64, transparent 70%)`,\r\n        }}\r\n      />\r\n\r\n      <div className=\"container relative z-10 mx-auto px-4 md:px-6\">\r\n        <div className=\"mx-auto max-w-5xl overflow-hidden rounded-[28px] border border-border/40 bg-secondary/20 shadow-xl backdrop-blur-sm\">\r\n          <div className=\"grid md:grid-cols-2\">\r\n            <div className=\"relative p-6 md:p-10\" ref={formRef}>\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={\r\n                  isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }\r\n                }\r\n                transition={{ duration: 0.5, delay: 0.1 }}\r\n                className=\"flex w-full gap-2\"\r\n              >\r\n                <h2 className=\"mb-2 bg-gradient-to-r from-foreground to-foreground/80 bg-clip-text text-4xl font-bold tracking-tight text-transparent md:text-5xl\">\r\n                  Contact\r\n                </h2>\r\n                <span className=\"relative z-10 w-full text-4xl font-bold italic tracking-tight text-primary md:text-5xl\">\r\n                  Us\r\n                </span>\r\n                <SparklesCore\r\n                  id=\"tsparticles\"\r\n                  background=\"transparent\"\r\n                  minSize={0.6}\r\n                  maxSize={1.4}\r\n                  particleDensity={500}\r\n                  className=\"absolute inset-0 top-0 h-24 w-full\"\r\n                  particleColor=\"#e60a64\"\r\n                />\r\n              </motion.div>\r\n\r\n              <motion.form\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={\r\n                  isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }\r\n                }\r\n                transition={{ duration: 0.5, delay: 0.3 }}\r\n                onSubmit={handleSubmit}\r\n                className=\"mt-8 space-y-6\"\r\n              >\r\n                <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\r\n                  <motion.div\r\n                    className=\"space-y-2\"\r\n                    initial={{ opacity: 0, y: 10 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ delay: 0.4 }}\r\n                  >\r\n                    <Label htmlFor=\"name\">Name</Label>\r\n                    <Input\r\n                      id=\"name\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      placeholder=\"Enter your name\"\r\n                      required\r\n                    />\r\n                  </motion.div>\r\n\r\n                  <motion.div\r\n                    className=\"space-y-2\"\r\n                    initial={{ opacity: 0, y: 10 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ delay: 0.5 }}\r\n                  >\r\n                    <Label htmlFor=\"email\">Email</Label>\r\n                    <Input\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      placeholder=\"Enter your email\"\r\n                      required\r\n                    />\r\n                  </motion.div>\r\n                </div>\r\n\r\n                <motion.div\r\n                  className=\"space-y-2\"\r\n                  initial={{ opacity: 0, y: 10 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{ delay: 0.6 }}\r\n                >\r\n                  <Label htmlFor=\"message\">Message</Label>\r\n                  <Textarea\r\n                    id=\"message\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    placeholder=\"Enter your message\"\r\n                    required\r\n                    className=\"h-40 resize-none\"\r\n                  />\r\n                </motion.div>\r\n\r\n                <motion.div\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                  className=\"w-full\"\r\n                >\r\n                  <Button\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    className=\"w-full bg-gradient-to-b from-rose-500 to-rose-700 text-white shadow-[0px_2px_0px_0px_rgba(255,255,255,0.3)_inset]\"\r\n                  >\r\n                    {isSubmitting ? (\r\n                      <span className=\"flex items-center justify-center\">\r\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                        Sending...\r\n                      </span>\r\n                    ) : isSubmitted ? (\r\n                      <span className=\"flex items-center justify-center\">\r\n                        <Check className=\"mr-2 h-4 w-4\" />\r\n                        Message Sent!\r\n                      </span>\r\n                    ) : (\r\n                      <span>Send Message</span>\r\n                    )}\r\n                  </Button>\r\n                </motion.div>\r\n              </motion.form>\r\n            </div>\r\n\r\n            <motion.div\r\n              initial={{ opacity: 0, x: 20 }}\r\n              animate={isInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 20 }}\r\n              transition={{ duration: 0.5, delay: 0.5 }}\r\n              className=\"relative my-8 flex items-center justify-center overflow-hidden pr-8\"\r\n            >\r\n              <div className=\"flex flex-col items-center justify-center overflow-hidden\">\r\n                <article className=\"relative mx-auto h-[350px] min-h-60 max-w-[450px] overflow-hidden rounded-3xl border bg-gradient-to-b from-[#e60a64] to-[#e60a64]/5 p-6 text-3xl tracking-tight text-white md:h-[450px] md:min-h-80 md:p-8 md:text-4xl md:leading-[1.05] lg:text-5xl\">\r\n                  Presenting you with the best UI possible.\r\n                  <div className=\"absolute -bottom-20 -right-20 z-10 mx-auto flex h-full w-full max-w-[300px] items-center justify-center transition-all duration-700 hover:scale-105 md:-bottom-28 md:-right-28 md:max-w-[550px]\">\r\n                    <Earth\r\n                      scale={1.1}\r\n                      baseColor={[1, 0, 0.3]}\r\n                      markerColor={[0, 0, 0]}\r\n                      glowColor={[1, 0.3, 0.4]}\r\n                    />\r\n                  </div>\r\n                </article>\r\n              </div>\r\n            </motion.div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n",
      "path": "/components/mvpblocks/mainsections/contact/contact-us-1.tsx",
      "target": "/components/mvpblocks/contact-us-1.tsx"
    }
  ]
}