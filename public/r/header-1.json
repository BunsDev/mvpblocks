{
  "name": "header-1",
  "type": "registry:block",
  "dependencies": [
    "framer-motion",
    "lucide-react",
    "next-themes",
    "react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Menu, X, ChevronDown, ArrowRight, Sparkles } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useTheme } from \"next-themes\";\r\n\r\ninterface NavItem {\r\n  name: string;\r\n  href: string;\r\n  hasDropdown?: boolean;\r\n  dropdownItems?: { name: string; href: string; description?: string }[];\r\n}\r\n\r\nconst navItems: NavItem[] = [\r\n  { name: \"Home\", href: \"/\" },\r\n  { name: \"Features\", href: \"/features\" },\r\n  {\r\n    name: \"Products\",\r\n    href: \"/products\",\r\n    hasDropdown: true,\r\n    dropdownItems: [\r\n      {\r\n        name: \"Analytics\",\r\n        href: \"/analytics\",\r\n        description: \"Track your metrics\",\r\n      },\r\n      {\r\n        name: \"Dashboard\",\r\n        href: \"/dashboard\",\r\n        description: \"Manage your data\",\r\n      },\r\n      { name: \"Reports\", href: \"/reports\", description: \"Generate insights\" },\r\n    ],\r\n  },\r\n  { name: \"Pricing\", href: \"/pricing\" },\r\n  { name: \"About\", href: \"/about\" },\r\n];\r\n\r\nexport default function Header1() {\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);\r\n  const { theme } = useTheme();\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setIsScrolled(window.scrollY > 20);\r\n    };\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  const headerVariants = {\r\n    initial: { y: -100, opacity: 0 },\r\n    animate: { y: 0, opacity: 1 },\r\n    scrolled: {\r\n      backdropFilter: \"blur(20px)\",\r\n      backgroundColor:\r\n        theme === \"dark\" ? \"rgba(0, 0, 0, 0.8)\" : \"rgba(255, 255, 255, 0.8)\",\r\n      boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.1)\",\r\n    },\r\n  };\r\n\r\n  const mobileMenuVariants = {\r\n    closed: { opacity: 0, height: 0 },\r\n    open: { opacity: 1, height: \"auto\" },\r\n  };\r\n\r\n  const dropdownVariants = {\r\n    hidden: { opacity: 0, y: -10, scale: 0.95 },\r\n    visible: { opacity: 1, y: 0, scale: 1 },\r\n  };\r\n\r\n  return (\r\n    <motion.header\r\n      className=\"fixed left-0 right-0 top-0 z-50 transition-all duration-300\"\r\n      variants={headerVariants}\r\n      initial=\"initial\"\r\n      animate={isScrolled ? \"scrolled\" : \"animate\"}\r\n      transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n      style={{\r\n        backdropFilter: isScrolled ? \"blur(20px)\" : \"none\",\r\n        backgroundColor: isScrolled\r\n          ? theme === \"dark\"\r\n            ? \"rgba(0, 0, 0, 0.8)\"\r\n            : \"rgba(255, 255, 255, 0.8)\"\r\n          : \"transparent\",\r\n        boxShadow: isScrolled ? \"0 8px 32px rgba(0, 0, 0, 0.1)\" : \"none\",\r\n      }}\r\n    >\r\n      <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex h-16 items-center justify-between lg:h-20\">\r\n          <motion.div\r\n            className=\"flex items-center space-x-2\"\r\n            whileHover={{ scale: 1.05 }}\r\n            transition={{ type: \"spring\", stiffness: 400, damping: 10 }}\r\n          >\r\n            <Link href=\"/\" className=\"flex items-center space-x-2\">\r\n              <div className=\"flex h-8 w-8 items-center justify-center rounded-lg bg-gradient-to-br from-rose-500 to-rose-700\">\r\n                <Sparkles className=\"h-5 w-5 text-white\" />\r\n              </div>\r\n              <span className=\"bg-gradient-to-r from-rose-500 to-rose-700 bg-clip-text text-xl font-bold text-transparent\">\r\n                Acme Inc.\r\n              </span>\r\n            </Link>\r\n          </motion.div>\r\n\r\n          <nav className=\"hidden items-center space-x-8 lg:flex\">\r\n            {navItems.map((item) => (\r\n              <div\r\n                key={item.name}\r\n                className=\"relative\"\r\n                onMouseEnter={() =>\r\n                  item.hasDropdown && setActiveDropdown(item.name)\r\n                }\r\n                onMouseLeave={() => setActiveDropdown(null)}\r\n              >\r\n                <Link\r\n                  href={item.href}\r\n                  className=\"flex items-center space-x-1 font-medium text-foreground transition-colors duration-200 hover:text-rose-500\"\r\n                >\r\n                  <span>{item.name}</span>\r\n                  {item.hasDropdown && (\r\n                    <ChevronDown className=\"h-4 w-4 transition-transform duration-200\" />\r\n                  )}\r\n                </Link>\r\n\r\n                {item.hasDropdown && (\r\n                  <AnimatePresence>\r\n                    {activeDropdown === item.name && (\r\n                      <motion.div\r\n                        className=\"absolute left-0 top-full mt-2 w-64 overflow-hidden rounded-xl border border-border bg-background/95 shadow-xl backdrop-blur-lg\"\r\n                        variants={dropdownVariants}\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        exit=\"hidden\"\r\n                        transition={{ duration: 0.2 }}\r\n                      >\r\n                        {item.dropdownItems?.map((dropdownItem) => (\r\n                          <Link\r\n                            key={dropdownItem.name}\r\n                            href={dropdownItem.href}\r\n                            className=\"block px-4 py-3 transition-colors duration-200 hover:bg-muted\"\r\n                          >\r\n                            <div className=\"font-medium text-foreground\">\r\n                              {dropdownItem.name}\r\n                            </div>\r\n                            {dropdownItem.description && (\r\n                              <div className=\"text-sm text-muted-foreground\">\r\n                                {dropdownItem.description}\r\n                              </div>\r\n                            )}\r\n                          </Link>\r\n                        ))}\r\n                      </motion.div>\r\n                    )}\r\n                  </AnimatePresence>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </nav>\r\n\r\n          <div className=\"hidden items-center space-x-4 lg:flex\">\r\n            <Link\r\n              href=\"/login\"\r\n              className=\"font-medium text-foreground transition-colors duration-200 hover:text-rose-500\"\r\n            >\r\n              Sign In\r\n            </Link>\r\n            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\r\n              <Link\r\n                href=\"/signup\"\r\n                className=\"inline-flex items-center space-x-2 rounded-full bg-gradient-to-r from-rose-500 to-rose-700 px-6 py-2.5 font-medium text-white transition-all duration-200 hover:shadow-lg\"\r\n              >\r\n                <span>Get Started</span>\r\n                <ArrowRight className=\"h-4 w-4\" />\r\n              </Link>\r\n            </motion.div>\r\n          </div>\r\n\r\n          <motion.button\r\n            className=\"rounded-lg p-2 transition-colors duration-200 hover:bg-muted lg:hidden\"\r\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            {isMobileMenuOpen ? (\r\n              <X className=\"h-6 w-6\" />\r\n            ) : (\r\n              <Menu className=\"h-6 w-6\" />\r\n            )}\r\n          </motion.button>\r\n        </div>\r\n\r\n        <AnimatePresence>\r\n          {isMobileMenuOpen && (\r\n            <motion.div\r\n              className=\"overflow-hidden lg:hidden\"\r\n              variants={mobileMenuVariants}\r\n              initial=\"closed\"\r\n              animate=\"open\"\r\n              exit=\"closed\"\r\n              transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n            >\r\n              <div className=\"mt-4 space-y-2 rounded-xl border border-border bg-background/95 py-4 shadow-xl backdrop-blur-lg\">\r\n                {navItems.map((item) => (\r\n                  <Link\r\n                    key={item.name}\r\n                    href={item.href}\r\n                    className=\"block px-4 py-3 font-medium text-foreground transition-colors duration-200 hover:bg-muted\"\r\n                    onClick={() => setIsMobileMenuOpen(false)}\r\n                  >\r\n                    {item.name}\r\n                  </Link>\r\n                ))}\r\n                <div className=\"space-y-2 px-4 py-2\">\r\n                  <Link\r\n                    href=\"/login\"\r\n                    className=\"block w-full rounded-lg py-2.5 text-center font-medium text-foreground transition-colors duration-200 hover:bg-muted\"\r\n                    onClick={() => setIsMobileMenuOpen(false)}\r\n                  >\r\n                    Sign In\r\n                  </Link>\r\n                  <Link\r\n                    href=\"/signup\"\r\n                    className=\"block w-full rounded-lg bg-gradient-to-r from-rose-500 to-rose-700 py-2.5 text-center font-medium text-white transition-all duration-200 hover:shadow-lg\"\r\n                    onClick={() => setIsMobileMenuOpen(false)}\r\n                  >\r\n                    Get Started\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n    </motion.header>\r\n  );\r\n}\r\n",
      "path": "/components/mvpblocks/required/headers/header-1.tsx",
      "target": "/components/mvpblocks/header-1.tsx"
    }
  ]
}