{
  "name": "pricing-glassmorphism",
  "author": "surya10102000",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "registryDependencies": [
    "https://blocks.mvp-subha.me/r/utils.json",
    "https://blocks.mvp-subha.me/r/button.json",
    "https://blocks.mvp-subha.me/r/switch.json",
    "https://blocks.mvp-subha.me/r/label.json"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "import * as React from 'react';\r\nimport { motion, Variants } from 'framer-motion';\r\nimport { cn } from '@/lib/utils';\r\nimport { Check } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Label } from '@/components/ui/label';\r\n\r\ntype PricingPlan = {\r\n  name: string;\r\n  price: {\r\n    monthly: string;\r\n    annual: string;\r\n  };\r\n  description: string;\r\n  features: string[];\r\n  cta: string;\r\n  tag: string;\r\n  link: string;\r\n  highlight?: boolean;\r\n};\r\n\r\nconst pricingPlans: PricingPlan[] = [\r\n  {\r\n    name: 'Starter',\r\n    price: {\r\n      monthly: 'Free',\r\n      annual: 'Free',\r\n    },\r\n    description: 'Perfect for individuals getting started',\r\n    features: [\r\n      'Up to 5 projects',\r\n      '10GB storage',\r\n      'Basic analytics',\r\n      'Email support',\r\n    ],\r\n    cta: 'Get Started',\r\n    link: '#',\r\n    tag: 'Free Plan',\r\n  },\r\n  {\r\n    name: 'Professional',\r\n    price: {\r\n      monthly: '$49',\r\n      annual: '$39',\r\n    },\r\n    description: 'For growing teams and businesses',\r\n    features: [\r\n      'Unlimited projects',\r\n      '50GB storage',\r\n      'Advanced analytics',\r\n      'Priority email support',\r\n      'API access',\r\n    ],\r\n    cta: 'Start Free Trial',\r\n    link: '#',\r\n    tag: 'Standard Plan',\r\n  },\r\n  {\r\n    name: 'Enterprise',\r\n    price: {\r\n      monthly: '$99',\r\n      annual: '$79',\r\n    },\r\n    description: 'For large scale organizations',\r\n    features: [\r\n      'Unlimited projects',\r\n      'Unlimited storage',\r\n      'Advanced analytics',\r\n      '24/7 phone support',\r\n      'API access',\r\n      'Dedicated account manager',\r\n    ],\r\n    cta: 'Contact Sales',\r\n    link: '#',\r\n    tag: 'Premium Plan',\r\n    highlight: true,\r\n  },\r\n];\r\n\r\nconst containerVariants: Variants = {\r\n  hidden: { opacity: 0 },\r\n  show: {\r\n    opacity: 1,\r\n    transition: {\r\n      staggerChildren: 0.1,\r\n    },\r\n  },\r\n};\r\n\r\nconst itemVariants: Variants = {\r\n  hidden: { opacity: 0, y: 20 },\r\n  show: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      type: 'spring',\r\n      damping: 15,\r\n      stiffness: 150,\r\n    },\r\n  },\r\n};\r\n\r\ninterface PricingProps {\r\n  plans?: typeof pricingPlans;\r\n  className?: string;\r\n}\r\n\r\nconst PricingPage = ({ plans = pricingPlans, className }: PricingProps) => {\r\n  const [isAnnual, setIsAnnual] = React.useState(true);\r\n\r\n  return (\r\n    <div className={cn('relative w-full overflow-hidden', className)}>\r\n      {/* Background elements */}\r\n      <div className=\"absolute inset-0 -z-10 overflow-hidden\">\r\n        <div className=\"bg-primary/5 absolute -right-[10%] -bottom-[10%] h-[40%] w-[40%] rounded-full blur-3xl\" />\r\n        <div className=\"bg-primary/5 absolute -bottom-[10%] -left-[10%] h-[40%] w-[40%] rounded-full blur-3xl\" />\r\n        <h1 className=\"text-center font-bold text-[7rem] md:text-[10rem]\">\r\n          Pricing\r\n        </h1>\r\n      </div>\r\n      {/* Pricing Container */}\r\n      <div className=\"relative container pt-28 md:pt-40\">\r\n        <motion.div\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate=\"show\"\r\n          className=\"relative z-10 grid gap-8 md:grid-cols-2 lg:grid-cols-3\"\r\n        >\r\n          {plans.map((plan) => (\r\n            <PricingCard\r\n              key={plan.name}\r\n              variants={itemVariants}\r\n              plan={plan}\r\n              isAnnual={isAnnual}\r\n            />\r\n          ))}\r\n        </motion.div>\r\n      </div>\r\n\r\n      <BillingToggle\r\n        isAnnual={isAnnual}\r\n        onCheckedChange={setIsAnnual}\r\n        className=\"mb-12\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface PriceDisplayProps {\r\n  price: {\r\n    monthly: string;\r\n    annual: string;\r\n  };\r\n  isAnnual: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst PriceDisplay = ({ price, isAnnual, className }: PriceDisplayProps) => {\r\n  return (\r\n    <div className={cn('relative mb-8', className)}>\r\n      <div\r\n        className={cn(\r\n          'mt-2 text-6xl font-bold',\r\n          'from-foreground bg-gradient-to-r to-transparent bg-clip-text text-transparent',\r\n        )}\r\n      >\r\n        {price.monthly === 'Free' ? (\r\n          <span>Free</span>\r\n        ) : (\r\n          <>\r\n            <span>{isAnnual ? price.annual : price.monthly}</span>\r\n            <span>/{isAnnual ? 'y' : 'm'}</span>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface PricingFeaturesProps {\r\n  features: string[];\r\n  className?: string;\r\n}\r\n\r\nconst PricingFeatures = ({ features, className }: PricingFeaturesProps) => {\r\n  return (\r\n    <ul className={cn('relative mb-8 space-y-3', className)}>\r\n      {features.map((feature) => (\r\n        <li key={feature} className=\"flex items-center\">\r\n          <div className=\"bg-foreground/10 shadow-foreground/50 mr-3 rounded-full p-1 shadow-inner\">\r\n            <Check className=\"h-4 w-4\" />\r\n          </div>\r\n          <span>{feature}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\ninterface PricingCardProps\r\n  extends React.ComponentPropsWithoutRef<typeof motion.div> {\r\n  plan: PricingPlan;\r\n  isAnnual: boolean;\r\n}\r\n\r\nconst PricingCard = React.forwardRef<HTMLDivElement, PricingCardProps>(\r\n  ({ plan, isAnnual, className, ...props }, ref) => {\r\n    return (\r\n      <motion.div\r\n        ref={ref}\r\n        className={cn(\r\n          'relative flex flex-col justify-between overflow-hidden rounded-2xl p-6',\r\n          'border-border/50 border',\r\n          'bg-background/20 backdrop-blur-sm',\r\n          'shadow-[inset_0_1px_1px_0_rgba(255,255,255,0.1)]',\r\n          \"before:absolute before:inset-0 before:-z-10 before:content-['']\",\r\n          'before:bg-gradient-to-br before:from-white/5 before:to-transparent',\r\n          'before:opacity-0 before:transition-opacity before:duration-300 hover:before:opacity-100',\r\n          \"after:absolute after:inset-0 after:-z-20 after:content-['']\",\r\n          'after:bg-[radial-gradient(circle_at_75%_25%,hsl(var(--primary)/0.15),transparent_70%)]',\r\n          'after:opacity-70',\r\n          'hover:border-border/70 hover:shadow-lg',\r\n          className,\r\n        )}\r\n        whileHover={{ y: -8 }}\r\n        {...props}\r\n      >\r\n        <div>\r\n          <div className=\"py-2\">\r\n            <div className=\"text-muted-foreground text-sm font-medium\">\r\n              {plan.tag}\r\n            </div>\r\n          </div>\r\n\r\n          <PriceDisplay price={plan.price} isAnnual={isAnnual} />\r\n          <PricingFeatures features={plan.features} />\r\n        </div>\r\n\r\n        <div className=\"relative\">\r\n          <Button\r\n            className={cn(\r\n              'after:bg-primary/80 relative w-full after:absolute after:-z-10 after:h-full after:w-full after:blur-xs',\r\n            )}\r\n          >\r\n            {plan.cta}\r\n          </Button>\r\n        </div>\r\n      </motion.div>\r\n    );\r\n  },\r\n);\r\n\r\nPricingCard.displayName = 'PricingCard';\r\n\r\ninterface BillingToggleProps {\r\n  isAnnual: boolean;\r\n  onCheckedChange: (checked: boolean) => void;\r\n  className?: string;\r\n}\r\n\r\nconst BillingToggle = ({\r\n  isAnnual,\r\n  onCheckedChange,\r\n  className,\r\n}: BillingToggleProps) => {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6 }}\r\n      className={cn(\r\n        'flex flex-col items-center justify-center text-center',\r\n        className,\r\n      )}\r\n    >\r\n      <div className=\"bg-background/50 border-border/50 mt-8 flex items-center gap-4 rounded-full border p-2 backdrop-blur-sm\">\r\n        <Label htmlFor=\"billing-toggle\">Monthly</Label>\r\n        <Switch\r\n          id=\"billing-toggle\"\r\n          checked={isAnnual}\r\n          onCheckedChange={onCheckedChange}\r\n        />\r\n        <Label htmlFor=\"billing-toggle\">\r\n          Annual <span className=\"text-primary\">(20% off)</span>\r\n        </Label>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PricingPage;\r\n\r\nexport type { PricingPlan };\r\n\r\nexport { pricingPlans };\r\n\r\nexport { PriceDisplay, PricingFeatures, PricingCard, BillingToggle };\r\n",
      "path": "/components/mvpblocks/mainsections/pricing/pricing-glassmorphism.tsx",
      "target": "components/mvpblocks/pricing-glassmorphism.tsx"
    }
  ]
}