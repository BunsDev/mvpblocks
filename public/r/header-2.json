{
  "name": "header-2",
  "type": "registry:block",
  "dependencies": [
    "framer-motion",
    "lucide-react",
    "react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:block",
      "content": "'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence, easeInOut } from 'framer-motion';\r\nimport { Menu, X, ArrowRight, Zap, Search } from 'lucide-react';\r\nimport Link from 'next/link';\r\n\r\ninterface NavItem {\r\n  name: string;\r\n  href: string;\r\n}\r\n\r\nconst navItems: NavItem[] = [\r\n  { name: 'Home', href: '/' },\r\n  { name: 'Features', href: '/features' },\r\n  { name: 'Solutions', href: '/solutions' },\r\n  { name: 'Pricing', href: '/pricing' },\r\n  { name: 'Resources', href: '/resources' },\r\n  { name: 'Contact', href: '/contact' },\r\n];\r\n\r\nexport default function Header2() {\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n  const [hoveredItem, setHoveredItem] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setIsScrolled(window.scrollY > 10);\r\n    };\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0, y: -20 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: -10 },\r\n    visible: { opacity: 1, y: 0 },\r\n  };\r\n\r\n  const mobileMenuVariants = {\r\n    closed: {\r\n      opacity: 0,\r\n      x: '100%',\r\n      transition: {\r\n        duration: 0.3,\r\n        ease: easeInOut,\r\n      },\r\n    },\r\n    open: {\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: {\r\n        duration: 0.3,\r\n        ease: easeInOut,\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const mobileItemVariants = {\r\n    closed: { opacity: 0, x: 20 },\r\n    open: { opacity: 1, x: 0 },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.header\r\n        className={`fixed top-0 right-0 left-0 z-50 transition-all duration-500 ${\r\n          isScrolled\r\n            ? 'border-border/50 bg-background/80 border-b shadow-sm backdrop-blur-md'\r\n            : 'bg-transparent'\r\n        }`}\r\n        variants={containerVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n      >\r\n        <div className=\"mx-auto max-w-6xl px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex h-16 items-center justify-between\">\r\n            <motion.div\r\n              className=\"flex items-center space-x-3\"\r\n              variants={itemVariants}\r\n              whileHover={{ scale: 1.02 }}\r\n              transition={{ type: 'spring', stiffness: 400, damping: 25 }}\r\n            >\r\n              <Link prefetch={false} href=\"/\" className=\"flex items-center space-x-3\">\r\n                <div className=\"relative\">\r\n                  <div className=\"flex h-9 w-9 items-center justify-center rounded-xl bg-gradient-to-br from-rose-500 via-rose-600 to-rose-700 shadow-lg\">\r\n                    <Zap className=\"h-5 w-5 text-white\" />\r\n                  </div>\r\n                  <div className=\"absolute -top-1 -right-1 h-3 w-3 animate-pulse rounded-full bg-green-400\"></div>\r\n                </div>\r\n                <div className=\"flex flex-col\">\r\n                  <span className=\"text-foreground text-lg font-bold\">\r\n                    Acme Inc.\r\n                  </span>\r\n                  <span className=\"text-muted-foreground -mt-1 text-xs\">\r\n                    Build faster\r\n                  </span>\r\n                </div>\r\n              </Link>\r\n            </motion.div>\r\n\r\n            <nav className=\"hidden items-center space-x-1 lg:flex\">\r\n              {navItems.map((item, index) => (\r\n                <motion.div\r\n                  key={item.name}\r\n                  variants={itemVariants}\r\n                  className=\"relative\"\r\n                  onMouseEnter={() => setHoveredItem(item.name)}\r\n                  onMouseLeave={() => setHoveredItem(null)}\r\n                >\r\n                  <Link prefetch={false}                    href={item.href}\r\n                    className=\"text-foreground/80 hover:text-foreground relative rounded-lg px-4 py-2 text-sm font-medium transition-colors duration-200\"\r\n                  >\r\n                    {hoveredItem === item.name && (\r\n                      <motion.div\r\n                        className=\"bg-muted absolute inset-0 rounded-lg\"\r\n                        layoutId=\"navbar-hover\"\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        exit={{ opacity: 0 }}\r\n                        transition={{\r\n                          type: 'spring',\r\n                          stiffness: 400,\r\n                          damping: 30,\r\n                        }}\r\n                      />\r\n                    )}\r\n                    <span className=\"relative z-10\">{item.name}</span>\r\n                  </Link>\r\n                </motion.div>\r\n              ))}\r\n            </nav>\r\n\r\n            <motion.div\r\n              className=\"hidden items-center space-x-3 lg:flex\"\r\n              variants={itemVariants}\r\n            >\r\n              <motion.button\r\n                className=\"text-muted-foreground hover:bg-muted hover:text-foreground rounded-lg p-2 transition-colors duration-200\"\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95 }}\r\n              >\r\n                <Search className=\"h-5 w-5\" />\r\n              </motion.button>\r\n\r\n              <Link prefetch={false}                href=\"/login\"\r\n                className=\"text-foreground/80 hover:text-foreground px-4 py-2 text-sm font-medium transition-colors duration-200\"\r\n              >\r\n                Sign In\r\n              </Link>\r\n\r\n              <motion.div\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n              >\r\n                <Link prefetch={false}                  href=\"/signup\"\r\n                  className=\"bg-foreground text-background hover:bg-foreground/90 inline-flex items-center space-x-2 rounded-lg px-5 py-2.5 text-sm font-medium shadow-sm transition-all duration-200\"\r\n                >\r\n                  <span>Get Started</span>\r\n                  <ArrowRight className=\"h-4 w-4\" />\r\n                </Link>\r\n              </motion.div>\r\n            </motion.div>\r\n\r\n            <motion.button\r\n              className=\"text-foreground hover:bg-muted rounded-lg p-2 transition-colors duration-200 lg:hidden\"\r\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\r\n              variants={itemVariants}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              {isMobileMenuOpen ? (\r\n                <X className=\"h-6 w-6\" />\r\n              ) : (\r\n                <Menu className=\"h-6 w-6\" />\r\n              )}\r\n            </motion.button>\r\n          </div>\r\n        </div>\r\n      </motion.header>\r\n\r\n      <AnimatePresence>\r\n        {isMobileMenuOpen && (\r\n          <>\r\n            <motion.div\r\n              className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-sm lg:hidden\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              exit={{ opacity: 0 }}\r\n              onClick={() => setIsMobileMenuOpen(false)}\r\n            />\r\n            <motion.div\r\n              className=\"border-border bg-background fixed top-16 right-4 z-50 w-80 overflow-hidden rounded-2xl border shadow-2xl lg:hidden\"\r\n              variants={mobileMenuVariants}\r\n              initial=\"closed\"\r\n              animate=\"open\"\r\n              exit=\"closed\"\r\n            >\r\n              <div className=\"space-y-6 p-6\">\r\n                <div className=\"space-y-1\">\r\n                  {navItems.map((item) => (\r\n                    <motion.div key={item.name} variants={mobileItemVariants}>\r\n                      <Link prefetch={false}                        href={item.href}\r\n                        className=\"text-foreground hover:bg-muted block rounded-lg px-4 py-3 font-medium transition-colors duration-200\"\r\n                        onClick={() => setIsMobileMenuOpen(false)}\r\n                      >\r\n                        {item.name}\r\n                      </Link>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n\r\n                <motion.div\r\n                  className=\"border-border space-y-3 border-t pt-6\"\r\n                  variants={mobileItemVariants}\r\n                >\r\n                  <Link prefetch={false}                    href=\"/login\"\r\n                    className=\"text-foreground hover:bg-muted block w-full rounded-lg py-3 text-center font-medium transition-colors duration-200\"\r\n                    onClick={() => setIsMobileMenuOpen(false)}\r\n                  >\r\n                    Sign In\r\n                  </Link>\r\n                  <Link prefetch={false}                    href=\"/signup\"\r\n                    className=\"bg-foreground text-background hover:bg-foreground/90 block w-full rounded-lg py-3 text-center font-medium transition-all duration-200\"\r\n                    onClick={() => setIsMobileMenuOpen(false)}\r\n                  >\r\n                    Get Started\r\n                  </Link>\r\n                </motion.div>\r\n              </div>\r\n            </motion.div>\r\n          </>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n}\r\n",
      "path": "/components/mvpblocks/required/headers/header-2.tsx",
      "target": "components/mvpblocks/header-2.tsx"
    }
  ]
}