{
  "name": "phone-mockup",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion",
    "next-themes",
    "react"
  ],
  "registryDependencies": [
    "https://blocks.mvp-subha.me/r/utils.json"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  motion,\r\n  useAnimation,\r\n  useMotionValue,\r\n  useTransform,\r\n} from 'framer-motion';\r\nimport { cn } from '@/lib/utils';\r\nimport { useTheme } from 'next-themes';\r\n\r\ninterface PhoneMockupProps {\r\n  className?: string;\r\n  imageUrl: string;\r\n  alt?: string;\r\n  glowColor?: string;\r\n}\r\n\r\nexport default function PhoneMockup({\r\n  className,\r\n  imageUrl,\r\n  alt = 'Mobile screenshot',\r\n  glowColor = 'rgba(229, 62, 62, 0.3)',\r\n}: PhoneMockupProps) {\r\n  const { theme } = useTheme();\r\n  const isDark = theme === 'dark';\r\n  const controls = useAnimation();\r\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const rotateX = useMotionValue(0);\r\n  const rotateY = useMotionValue(0);\r\n  const shadowX = useTransform(rotateY, [-15, 0, 15], [-25, 0, 25]);\r\n  const shadowY = useTransform(rotateX, [-15, 0, 15], [25, 0, -25]);\r\n\r\n  useEffect(() => {\r\n    controls.start({\r\n      y: [0, -10, 0],\r\n      transition: {\r\n        duration: 6,\r\n        ease: 'easeInOut',\r\n        repeat: Infinity,\r\n      },\r\n    });\r\n  }, [controls]);\r\n\r\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const centerX = rect.left + rect.width / 2;\r\n    const centerY = rect.top + rect.height / 2;\r\n\r\n    const rotateXValue = ((e.clientY - centerY) / (rect.height / 2)) * 15;\r\n    const rotateYValue = ((e.clientX - centerX) / (rect.width / 2)) * -15;\r\n\r\n    rotateX.set(rotateXValue);\r\n    rotateY.set(rotateYValue);\r\n    setMousePosition({ x: e.clientX - rect.left, y: e.clientY - rect.top });\r\n    setIsHovered(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    rotateX.set(0);\r\n    rotateY.set(0);\r\n    setIsHovered(false);\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className={cn('relative mx-auto w-full max-w-[320px]', className)}\r\n      animate={controls}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseLeave={handleMouseLeave}\r\n      style={{\r\n        transformStyle: 'preserve-3d',\r\n        perspective: '1000px',\r\n      }}\r\n    >\r\n      <motion.div\r\n        className=\"absolute -inset-4 rounded-[50px] opacity-60 blur-xl\"\r\n        animate={{\r\n          background: isDark\r\n            ? [\r\n                `radial-gradient(circle at 30% 30%, rgba(229, 62, 62, ${isHovered ? 0.25 : 0.15}) 0%, rgba(120, 119, 198, ${isHovered ? 0.1 : 0.05}) 50%, transparent 80%)`,\r\n                `radial-gradient(circle at 70% 70%, rgba(229, 62, 62, ${isHovered ? 0.25 : 0.15}) 0%, rgba(120, 119, 198, ${isHovered ? 0.1 : 0.05}) 50%, transparent 80%)`,\r\n                `radial-gradient(circle at 30% 30%, rgba(229, 62, 62, ${isHovered ? 0.25 : 0.15}) 0%, rgba(120, 119, 198, ${isHovered ? 0.1 : 0.05}) 50%, transparent 80%)`,\r\n              ]\r\n            : [\r\n                `radial-gradient(circle at 30% 30%, ${isHovered ? glowColor.replace('0.2', '0.3') : glowColor} 0%, transparent 70%)`,\r\n                `radial-gradient(circle at 70% 70%, ${isHovered ? glowColor.replace('0.2', '0.3') : glowColor} 0%, transparent 70%)`,\r\n                `radial-gradient(circle at 30% 30%, ${isHovered ? glowColor.replace('0.2', '0.3') : glowColor} 0%, transparent 70%)`,\r\n              ],\r\n        }}\r\n        transition={{\r\n          duration: isHovered ? 4 : 8,\r\n          repeat: Infinity,\r\n          ease: 'easeInOut',\r\n        }}\r\n        style={{\r\n          zIndex: 0,\r\n          opacity: isHovered ? 0.8 : 0.6,\r\n        }}\r\n      />\r\n\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{\r\n          duration: 0.8,\r\n          delay: 0.2,\r\n          type: 'spring',\r\n          stiffness: 300,\r\n          damping: 20,\r\n        }}\r\n        className=\"relative z-10 overflow-hidden rounded-[35px] border-[10px] border-foreground/5 bg-background shadow-lg dark:border-foreground/10\"\r\n        style={{\r\n          transformStyle: 'preserve-3d',\r\n          perspective: '1000px',\r\n          transform: `rotateX(${rotateX.get()}deg) rotateY(${rotateY.get()}deg) scale(${isHovered ? 1.03 : 1})`,\r\n          transition: 'transform 0.2s ease-out',\r\n          boxShadow: isDark\r\n            ? `0 0 0 1px rgba(255, 255, 255, 0.05), ${shadowX.get()}px ${shadowY.get()}px 40px rgba(0, 0, 0, 0.3), 0 0 20px rgba(120, 119, 198, 0.1)`\r\n            : `0 0 0 1px rgba(229, 62, 62, 0.03), ${shadowX.get()}px ${shadowY.get()}px 40px rgba(0, 0, 0, 0.1), 0 0 20px rgba(229, 62, 62, 0.05)`,\r\n        }}\r\n      >\r\n        <div className=\"absolute left-1/2 top-0 z-20 h-7 w-28 -translate-x-1/2 rounded-b-xl bg-foreground/10 backdrop-blur-sm\">\r\n          <div className=\"absolute left-1/2 top-1/2 h-2 w-2 -translate-x-1/2 -translate-y-1/2 rounded-full bg-foreground/30\"></div>\r\n        </div>\r\n\r\n        <div className=\"absolute -right-[14px] top-16 h-12 w-[4px] rounded-l-sm bg-foreground/20\"></div>\r\n        <div className=\"absolute -left-[14px] top-16 h-8 w-[4px] rounded-r-sm bg-foreground/20\"></div>\r\n        <div className=\"absolute -left-[14px] top-28 h-8 w-[4px] rounded-r-sm bg-foreground/20\"></div>\r\n\r\n        <div className=\"relative aspect-[9/16] w-full overflow-hidden bg-background\">\r\n          <motion.img\r\n            src={imageUrl}\r\n            alt={alt}\r\n            className=\"h-full w-full object-cover\"\r\n            initial={{ opacity: 0, scale: 1.05 }}\r\n            animate={{\r\n              opacity: 1,\r\n              scale: isHovered ? 1.02 : 1,\r\n            }}\r\n            transition={{\r\n              duration: 0.8,\r\n              delay: 0.4,\r\n              scale: {\r\n                type: 'spring',\r\n                stiffness: 300,\r\n                damping: 20,\r\n              },\r\n            }}\r\n          />\r\n          {isHovered && (\r\n            <motion.div\r\n              className=\"absolute inset-0\"\r\n              style={{\r\n                background: isDark\r\n                  ? `radial-gradient(circle at ${mousePosition.x}px ${mousePosition.y}px, rgba(255,255,255,0.1) 0%, transparent 60%)`\r\n                  : `radial-gradient(circle at ${mousePosition.x}px ${mousePosition.y}px, rgba(255,255,255,0.15) 0%, transparent 60%)`,\r\n                mixBlendMode: 'overlay',\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n\r\n      <motion.div\r\n        className=\"absolute -right-8 -top-8 h-24 w-24 rounded-full bg-primary/20 blur-xl\"\r\n        animate={{\r\n          opacity: [0.4, 0.7, 0.4],\r\n          scale: [1, 1.1, 1],\r\n        }}\r\n        transition={{\r\n          duration: 4,\r\n          repeat: Infinity,\r\n          ease: 'easeInOut',\r\n        }}\r\n      />\r\n    </motion.div>\r\n  );\r\n}\r\n",
      "path": "/components/ui/phone-mockup.tsx",
      "target": "/components/ui/phone-mockup.tsx"
    }
  ]
}