{
  "name": "header-1",
  "type": "registry:block",
  "dependencies": [
    "framer-motion",
    "lucide-react",
    "next-themes",
    "react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Menu, X, ChevronDown, ArrowRight, Sparkles } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useTheme } from \"next-themes\";\n\ninterface NavItem {\n  name: string;\n  href: string;\n  hasDropdown?: boolean;\n  dropdownItems?: { name: string; href: string; description?: string }[];\n}\n\nconst navItems: NavItem[] = [\n  { name: \"Home\", href: \"/\" },\n  { name: \"Features\", href: \"/features\" },\n  {\n    name: \"Products\",\n    href: \"/products\",\n    hasDropdown: true,\n    dropdownItems: [\n      { name: \"Analytics\", href: \"/analytics\", description: \"Track your metrics\" },\n      { name: \"Dashboard\", href: \"/dashboard\", description: \"Manage your data\" },\n      { name: \"Reports\", href: \"/reports\", description: \"Generate insights\" },\n    ],\n  },\n  { name: \"Pricing\", href: \"/pricing\" },\n  { name: \"About\", href: \"/about\" },\n];\n\nexport default function Header1() {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);\n  const { theme } = useTheme();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 20);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const headerVariants = {\n    initial: { y: -100, opacity: 0 },\n    animate: { y: 0, opacity: 1 },\n    scrolled: {\n      backdropFilter: \"blur(20px)\",\n      backgroundColor: theme === \"dark\" ? \"rgba(0, 0, 0, 0.8)\" : \"rgba(255, 255, 255, 0.8)\",\n      boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.1)\",\n    },\n  };\n\n  const mobileMenuVariants = {\n    closed: { opacity: 0, height: 0 },\n    open: { opacity: 1, height: \"auto\" },\n  };\n\n  const dropdownVariants = {\n    hidden: { opacity: 0, y: -10, scale: 0.95 },\n    visible: { opacity: 1, y: 0, scale: 1 },\n  };\n\n  return (\n    <motion.header\n      className=\"fixed top-0 left-0 right-0 z-50 transition-all duration-300\"\n      variants={headerVariants}\n      initial=\"initial\"\n      animate={isScrolled ? \"scrolled\" : \"animate\"}\n      transition={{ duration: 0.3, ease: \"easeInOut\" }}\n      style={{\n        backdropFilter: isScrolled ? \"blur(20px)\" : \"none\",\n        backgroundColor: isScrolled\n          ? theme === \"dark\"\n            ? \"rgba(0, 0, 0, 0.8)\"\n            : \"rgba(255, 255, 255, 0.8)\"\n          : \"transparent\",\n        boxShadow: isScrolled ? \"0 8px 32px rgba(0, 0, 0, 0.1)\" : \"none\",\n      }}\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16 lg:h-20\">\n          <motion.div\n            className=\"flex items-center space-x-2\"\n            whileHover={{ scale: 1.05 }}\n            transition={{ type: \"spring\", stiffness: 400, damping: 10 }}\n          >\n            <Link href=\"/\" className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-rose-500 to-rose-700 rounded-lg flex items-center justify-center\">\n                <Sparkles className=\"w-5 h-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold bg-gradient-to-r from-rose-500 to-rose-700 bg-clip-text text-transparent\">\n                Acme Inc.\n              </span>\n            </Link>\n          </motion.div>\n\n          <nav className=\"hidden lg:flex items-center space-x-8\">\n            {navItems.map((item) => (\n              <div\n                key={item.name}\n                className=\"relative\"\n                onMouseEnter={() => item.hasDropdown && setActiveDropdown(item.name)}\n                onMouseLeave={() => setActiveDropdown(null)}\n              >\n                <Link\n                  href={item.href}\n                  className=\"flex items-center space-x-1 text-foreground hover:text-rose-500 transition-colors duration-200 font-medium\"\n                >\n                  <span>{item.name}</span>\n                  {item.hasDropdown && (\n                    <ChevronDown className=\"w-4 h-4 transition-transform duration-200\" />\n                  )}\n                </Link>\n\n                {item.hasDropdown && (\n                  <AnimatePresence>\n                    {activeDropdown === item.name && (\n                      <motion.div\n                        className=\"absolute top-full left-0 mt-2 w-64 bg-background/95 backdrop-blur-lg border border-border rounded-xl shadow-xl overflow-hidden\"\n                        variants={dropdownVariants}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        exit=\"hidden\"\n                        transition={{ duration: 0.2 }}\n                      >\n                        {item.dropdownItems?.map((dropdownItem) => (\n                          <Link\n                            key={dropdownItem.name}\n                            href={dropdownItem.href}\n                            className=\"block px-4 py-3 hover:bg-muted transition-colors duration-200\"\n                          >\n                            <div className=\"font-medium text-foreground\">\n                              {dropdownItem.name}\n                            </div>\n                            {dropdownItem.description && (\n                              <div className=\"text-sm text-muted-foreground\">\n                                {dropdownItem.description}\n                              </div>\n                            )}\n                          </Link>\n                        ))}\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                )}\n              </div>\n            ))}\n          </nav>\n\n          <div className=\"hidden lg:flex items-center space-x-4\">\n            <Link\n              href=\"/login\"\n              className=\"text-foreground hover:text-rose-500 transition-colors duration-200 font-medium\"\n            >\n              Sign In\n            </Link>\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <Link\n                href=\"/signup\"\n                className=\"inline-flex items-center space-x-2 bg-gradient-to-r from-rose-500 to-rose-700 text-white px-6 py-2.5 rounded-full font-medium hover:shadow-lg transition-all duration-200\"\n              >\n                <span>Get Started</span>\n                <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </motion.div>\n          </div>\n\n          <motion.button\n            className=\"lg:hidden p-2 rounded-lg hover:bg-muted transition-colors duration-200\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            whileTap={{ scale: 0.95 }}\n          >\n            {isMobileMenuOpen ? (\n              <X className=\"w-6 h-6\" />\n            ) : (\n              <Menu className=\"w-6 h-6\" />\n            )}\n          </motion.button>\n        </div>\n\n        <AnimatePresence>\n          {isMobileMenuOpen && (\n            <motion.div\n              className=\"lg:hidden overflow-hidden\"\n              variants={mobileMenuVariants}\n              initial=\"closed\"\n              animate=\"open\"\n              exit=\"closed\"\n              transition={{ duration: 0.3, ease: \"easeInOut\" }}\n            >\n              <div className=\"py-4 space-y-2 bg-background/95 backdrop-blur-lg border border-border rounded-xl mt-4 shadow-xl\">\n                {navItems.map((item) => (\n                  <Link\n                    key={item.name}\n                    href={item.href}\n                    className=\"block px-4 py-3 text-foreground hover:bg-muted transition-colors duration-200 font-medium\"\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    {item.name}\n                  </Link>\n                ))}\n                <div className=\"px-4 py-2 space-y-2\">\n                  <Link\n                    href=\"/login\"\n                    className=\"block w-full text-center py-2.5 text-foreground hover:bg-muted rounded-lg transition-colors duration-200 font-medium\"\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    Sign In\n                  </Link>\n                  <Link\n                    href=\"/signup\"\n                    className=\"block w-full text-center py-2.5 bg-gradient-to-r from-rose-500 to-rose-700 text-white rounded-lg font-medium hover:shadow-lg transition-all duration-200\"\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    Get Started\n                  </Link>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </motion.header>\n  );\n}\n",
      "path": "/components/mvpblocks/required/headers/header-1.tsx",
      "target": "/components/mvpblocks/header-1.tsx"
    }
  ]
}